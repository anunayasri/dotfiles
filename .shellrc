# export HISTSIZE=10000       # number of lines to keep in memory
# export HISTFILESIZE=10000   # number of lines to keep in the history file

# load git aliases
source $HOME/.config/git/aliases.sh

export EDITOR=nvim
alias v=nvim
alias la='ls -altr'
alias ll='ls -ltr'
alias epoch="date +%s"
# alias cat='bat'
# node pkg for redis-cli: https://www.npmjs.com/package/redis-cli
# alias redis-cli='rdcli'

function source_if_exists() {
   if [[ -f "$1" ]]; then 
       source "$1"
   fi
}

# Set and unset values from .env file
function setenv() {
    filename="${1:-.env}"
    if [[ -f "$filename" ]]; then
        export $(grep -v '^#' $filename | sed 's/ *//g' | xargs)
    else
        echo "ERROR: $filename file not found"
    fi
}

function unsetenv() {
    filename="${1:-.env}"
    if [[ -f "$filename" ]]; then
        unset $(grep -v '^#' $filename | sed -E 's/(.*)=.*/\1/' | xargs)
    else
        echo "ERROR: $filename file not found"
    fi
}

# zsh dependency
# autoload -Uz compinit
# compinit

# source_if_exists "$HOME/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"

# Load brew shell configs
# BREW_PATH=$(which brew)
eval "$(/opt/homebrew/bin/brew shellenv)"
# eval "$($BREW_PATH shellenv)"
# Do not upgrade all packages on brew install <package>
export HOMEBREW_NO_AUTO_UPDATE=1

# Load startship prompt
if command -v starship >/dev/null 2>&1; then
    eval "$(starship init zsh)"
fi

# Load zoxide: a smarter cd command
if command -v zoxide >/dev/null 2>&1; then
    eval "$(zoxide init zsh)"
fi

# Source aliases for git
GIT_ALIASES_FILE="$HOME/.config/git/aliases.sh"
[ -f $GIT_ALIASES_FILE ] && source $GIT_ALIASES_FILE

# direnv settings 
if command -v direnv >/dev/null 2>&1; then
    eval "$(direnv hook zsh)"
fi

### fzf settings ###

# Setting fd as the default source for fzf
export FZF_DEFAULT_COMMAND='fd --type f -E .git -E vendor -E node_modules -H'
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# https://github.com/junegunn/fzf-git.sh
FZFGIT_FILE=~/.fzf-git/fzf-git.sh
[ -f $FZFGIT_FILE ] && source $FZFGIT_FILE

source <(fzf --zsh)     # Setup shell integration

# Add local bin folder in PATH
export PATH=$HOME/bin:$PATH

###

### Python settings ###

# Use this setting if python is install using Homebrew.
# This will enable the alias `python` that maps to a homebrew install of python.
# Ensure that this does not collide with the system default python.
# Upgrading python version might break things. Please explore more on this.
# Details here: https://docs.brew.sh/Homebrew-and-Python

# Append to the end of current PATH else sourcing zshrc while working in venv 
# will overwrite the venv python
export PATH="$PATH:$(brew --prefix python)/libexec/bin"

export npm_config_python=/Library/Frameworks/Python.framework/Versions/2.7/bin/python2

# TODO: Some parts might have to move to ~/.zprofile. Figure out if things break.
# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"

# Disable changing the prompt on enabling venv
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# Uncomment the following when working on python projects.
# These increase the shell startup time :(
# eval "$(pyenv init --path)"
# eval "$(pyenv init -)"
# eval "$(pyenv virtualenv-init -)"

# pipenv
# Find the executable using `ls $(python -m site --user-base)/bin`
# Docs: https://pipenv.pypa.io/en/latest/installation.html
# PIPENV_EXEC="$HOME/Library/Python/3.11/bin"
# export PATH="$PIPENV_EXEC:$PATH"

# export PYTHONBREAKPOINT=ipdb.set_trace

###

### Java config ###

 export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
 export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"

### go config ###
GO_BIN="/usr/local/go/bin"
if [[ -d $GO_BIN ]]; then
    export PATH="$PATH:$GO_BIN"
    [ -d "$HOME/go/bin" ] && export PATH="$PATH:$HOME/go/bin"
    export GOOS=darwin
fi

### docker, docker-compose, Rancher Desktop config ###
alias dk="docker"
alias dcp="docker compose"

# export PATH="$HOME/.rd/bin:$PATH"

### kubectl config ###
alias kb=kubectl

### Mermaid JS ###
# tool for text based diagrams
function mermaid() {
    echo "Service running on http://localhost:8000 ...\n\n"
    docker run --publish 8000:80 ghcr.io/mermaid-js/mermaid-live-editor
}

### Node config ###

# zsh-nvm to lazy load nvm scripts
# https://github.com/lukechilds/zsh-nvm#manually

ZSH_NVM_DIR="$HOME/.zsh-nvm"
# NVM_LAZY_LOAD=true
if ! [[ -d $ZSH_NVM_DIR ]]; then
    # download zsh-nvm
    echo "Downloading zsh-nvm ..."
    git clone https://github.com/lukechilds/zsh-nvm.git $ZSH_NVM_DIR
fi

source $ZSH_NVM_DIR/zsh-nvm.plugin.zsh

###

### vifm config ###

function vicd()
{
    local dst="$(command vifm --choose-dir - "$@")"
    if [ -z "$dst" ]; then
        echo 'Directory picking cancelled/failed'
        return 1
    fi
    cd "$dst"
}

###

### localstack config ###

AWS_ENDPOINT_URL="http://localhost:4566"
function awslocal()
{
    cmd="aws --endpoint-url=$AWS_ENDPOINT_URL $@"
    echo "Running: $cmd"
    eval "$cmd"
}

###


### rust config ###

export PATH="$HOME/.cargo/bin:$PATH"

alias rc="rustc"
